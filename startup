os.pullEvent = os.pullEventRaw
term.setBackgroundColor(colors.gray)
term.clear()
term.setCursorPos(1,1)

print("Lux OS Booting...")

-- === Настройка ===
local modem = peripheral.wrap("top")
local hopper = peripheral.wrap("left")
local disp = peripheral.wrap("bottom")

local CASH_NAME = "minecraft:emerald"
local CASH_LABEL = "Emerald"
local SERVER_ID = 0

-- === Проверка наличия предметов в диспансере ===
local function checkDispenserStock()
    local total = 0
    for i = 1, 9 do
        local item = disp.getItemDetail(i)
        if item then total = total + item.count end
    end
    if total <= 9 then
        print("TERMINAL OUT OF SERVICE! CONTACT BANK AUTHORITIES. [LOW]")
        sleep(10)
        os.reboot()
    end
end

-- === Функция экстренного сообщения и перезагрузки ===
local function alert(msg)
    term.setBackgroundColor(colors.gray)
    term.setTextColor(colors.red)
    term.clear()
    term.setCursorPos(1,1)
    print(msg)
    sleep(5)
    os.reboot()
end

-- === Общение с сервером ===
local function communicate(serverID, command, clientID)
    term.clear()
    term.setCursorPos(1,1)

    if command == "Deposit" then
        local item = hopper.getItemDetail(1)
        print("Insert 10 " .. CASH_LABEL .. " into hopper")
        repeat
            sleep(1)
            item = hopper.getItemDetail(1)
        until item and item.name == CASH_NAME and item.count == 10
        hopper.pushItems("bottom", 1)
        sleep(0.5)
    end

    print("Contacting server...")
    rednet.open("top")
    rednet.send(serverID, "proof?")

    local id, msg = rednet.receive(5)
    if id ~= serverID or tostring(msg) ~= tostring(serverID) then
        alert("Failed to verify server! [Stage 1]")
    end

    print("Verified server ID.")
    rednet.send(serverID, command)

    local id2, msg2 = rednet.receive(5)
    if id2 ~= serverID or msg2 ~= "Client?" then
        alert("Protocol mismatch or server error [Stage 2]")
    end

    print("Sending client ID...")
    rednet.send(serverID, clientID)

    local id3, result = rednet.receive(10)
    if id3 ~= serverID or not result then
        alert("Lost connection with server [Stage 3]")
    end

    if command == "Withdraw" then
        if result == "ok" then
            print("Dispensing...")
            for i = 1, 11 do
                rs.setOutput("bottom", true)
                sleep(0.1)
                rs.setOutput("bottom", false)
                sleep(0.1)
            end
            alert("TRANSACTION COMPLETED!")
        else
            alert("Withdraw denied.")
        end
    elseif command == "Deposit" then
        if result == "ok" then
            alert("TRANSACTION COMPLETED!")
        else
            alert("Deposit failed: " .. result)
        end
    elseif command == "Bal" then
        alert("Your balance: " .. result)
    else
        alert("Unknown server response.")
    end
end

-- === Меню терминала ===
local options = {"Withdraw", "Deposit", "See balance"}
local selection = 1

checkDispenserStock()

while true do
    term.clear()
    term.setCursorPos(1,1)

    print("Lux BANK ATM")
    print("Version 2.0")
    print("TESTING MODE")
    print(os.date())
    print("")

    for i = 1, #options do
        if i == selection then
            print(options[i]:upper() .. " <<")
        else
            print(options[i])
        end
    end

    local event, key = os.pullEvent("key")
    if key == keys.up then
        selection = selection == 1 and #options or selection - 1
    elseif key == keys.down then
        selection = selection == #options and 1 or selection + 1
    elseif key == keys.enter then
        term.clear()
        term.setCursorPos(1,1)

        local username, pin
        repeat
            print("Enter your username:")
            username = read()
        until username and username ~= ""

        repeat
            print("Enter your PIN:")
            pin = read("*")
        until pin and pin ~= ""

        local clientID = username .. pin
        communicate(SERVER_ID, options[selection] == "See balance" and "Bal" or options[selection], clientID)
        break
    end
end

term.clear()
term.setCursorPos(1,1)
textutils.slowPrint("Thank you for using ATM!")
sleep(1)
os.reboot()
